// @generated by protobuf-ts 2.10.0 with parameter client_grpc1
// @generated from protobuf file "service-simple.proto" (package "simple", syntax proto3)
// tslint:disable
import { SimpleCompute } from "./service-simple";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { OperationResponse } from "./service-simple";
import type { OperationRequest } from "./service-simple";
import * as grpc from "@grpc/grpc-js";
/**
 * @generated from protobuf service simple.SimpleCompute
 */
export interface ISimpleComputeClient {
    /**
     * @generated from protobuf rpc: Add(simple.OperationRequest) returns (simple.OperationResponse);
     */
    add(input: OperationRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: OperationResponse) => void): grpc.ClientUnaryCall;
    add(input: OperationRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: OperationResponse) => void): grpc.ClientUnaryCall;
    add(input: OperationRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: OperationResponse) => void): grpc.ClientUnaryCall;
    add(input: OperationRequest, callback: (err: grpc.ServiceError | null, value?: OperationResponse) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: Sub(simple.OperationRequest) returns (simple.OperationResponse);
     */
    sub(input: OperationRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: OperationResponse) => void): grpc.ClientUnaryCall;
    sub(input: OperationRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: OperationResponse) => void): grpc.ClientUnaryCall;
    sub(input: OperationRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: OperationResponse) => void): grpc.ClientUnaryCall;
    sub(input: OperationRequest, callback: (err: grpc.ServiceError | null, value?: OperationResponse) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: Mul(simple.OperationRequest) returns (simple.OperationResponse);
     */
    mul(input: OperationRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: OperationResponse) => void): grpc.ClientUnaryCall;
    mul(input: OperationRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: OperationResponse) => void): grpc.ClientUnaryCall;
    mul(input: OperationRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: OperationResponse) => void): grpc.ClientUnaryCall;
    mul(input: OperationRequest, callback: (err: grpc.ServiceError | null, value?: OperationResponse) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: Div(simple.OperationRequest) returns (simple.OperationResponse);
     */
    div(input: OperationRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: OperationResponse) => void): grpc.ClientUnaryCall;
    div(input: OperationRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: OperationResponse) => void): grpc.ClientUnaryCall;
    div(input: OperationRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: OperationResponse) => void): grpc.ClientUnaryCall;
    div(input: OperationRequest, callback: (err: grpc.ServiceError | null, value?: OperationResponse) => void): grpc.ClientUnaryCall;
}
/**
 * @generated from protobuf service simple.SimpleCompute
 */
export class SimpleComputeClient extends grpc.Client implements ISimpleComputeClient {
    private readonly _binaryOptions: Partial<BinaryReadOptions & BinaryWriteOptions>;
    constructor(address: string, credentials: grpc.ChannelCredentials, options: grpc.ClientOptions = {}, binaryOptions: Partial<BinaryReadOptions & BinaryWriteOptions> = {}) {
        super(address, credentials, options);
        this._binaryOptions = binaryOptions;
    }
    /**
     * @generated from protobuf rpc: Add(simple.OperationRequest) returns (simple.OperationResponse);
     */
    add(input: OperationRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: OperationResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: OperationResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: OperationResponse) => void)): grpc.ClientUnaryCall {
        const method = SimpleCompute.methods[0];
        return this.makeUnaryRequest<OperationRequest, OperationResponse>(`/${SimpleCompute.typeName}/${method.name}`, (value: OperationRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): OperationResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: Sub(simple.OperationRequest) returns (simple.OperationResponse);
     */
    sub(input: OperationRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: OperationResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: OperationResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: OperationResponse) => void)): grpc.ClientUnaryCall {
        const method = SimpleCompute.methods[1];
        return this.makeUnaryRequest<OperationRequest, OperationResponse>(`/${SimpleCompute.typeName}/${method.name}`, (value: OperationRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): OperationResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: Mul(simple.OperationRequest) returns (simple.OperationResponse);
     */
    mul(input: OperationRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: OperationResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: OperationResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: OperationResponse) => void)): grpc.ClientUnaryCall {
        const method = SimpleCompute.methods[2];
        return this.makeUnaryRequest<OperationRequest, OperationResponse>(`/${SimpleCompute.typeName}/${method.name}`, (value: OperationRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): OperationResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: Div(simple.OperationRequest) returns (simple.OperationResponse);
     */
    div(input: OperationRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: OperationResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: OperationResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: OperationResponse) => void)): grpc.ClientUnaryCall {
        const method = SimpleCompute.methods[3];
        return this.makeUnaryRequest<OperationRequest, OperationResponse>(`/${SimpleCompute.typeName}/${method.name}`, (value: OperationRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): OperationResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
}
